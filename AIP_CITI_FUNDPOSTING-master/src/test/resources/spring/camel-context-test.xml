<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:p="http://cxf.apache.org/policy"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cxf.apache.org/policy http://cxf.apache.org/schemas/policy.xsd  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd http://camel.apache.org/schema/cxf           http://camel.apache.org/schema/cxf/camel-cxf.xsd http://cxf.apache.org/transports/http/configuration     http://cxf.apache.org/schemas/configuration/http-conf.xsd http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">
    <cxf:cxfEndpoint address="http://0.0.0.0:8000/citiBanking"
        id="CitiEndpoint" serviceClass="org.tml.esb.CitiBanking">
        <cxf:properties>
            <entry key="dataFormat" value="MESSAGE"/>
        </cxf:properties>
    </cxf:cxfEndpoint>
    <!-- <cxf:cxfEndpoint address="{{sap.endpoint}}" endpointName="ZFIRFC_BANK_ECOLLECTION_CITI" 
		id="sapCitiFundPostingEndpoint" wsdlURL="{{destWsdl}}">
		<cxf:properties> 
		<entry key="dataFormat" value="MESSAGE"/> 
		</cxf:properties> 
		</cxf:cxfEndpoint> -->
    <bean class="org.tml.esb.LogAggregator" id="logger"/>
    <bean class="org.tml.esb.SapRequestProcessor" id="sapRequestProcessor"/>
    <camelContext id="_Ctx_CitiBanking" streamCache="true"
        xmlns="http://camel.apache.org/schema/spring"
        xmlns:n0="urn:sap-com:document:sap:rfc:functions"
        xmlns:ns="https://tatamotors.com/citi/api/1.0"
        xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
        xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:iso:std:iso:20022:tech:xsd:camt.054.001.02">
        <dataFormats>
            <jacksonxml id="jack" unmarshalTypeName="org.tml.esb.CreateCitiFundPostRequest"/>
        </dataFormats>
        <route id="_CitiBanking" streamCache="true">
            <from id="_CitiBank" uri="direct:cxf:bean:CitiEndpoint"/>
            <doTry id="_doTry1">
                <bean id="_bean1"
                    method="request(*************** Request Received from CITI Bank ***************)" ref="logger"/>
                <setBody id="_setBody2">
                    <xpath>//ns:CITI_NOTIFICATION_API</xpath>
                </setBody>
                <log id="_log1" message="After XPATH request Body :: ${body}"/>
                <unmarshal id="_unmarshal1" ref="jack"/>
                <process id="_process1" ref="sapRequestProcessor"/>
                <marshal id="_marshal1" ref="jack"/>
                <to id="_to1" uri="xslt:classpath:SoapRequest.xslt"/>
                <bean id="_bean2"
                    method="request(*************** Request Sent to SAP ***************)" ref="logger"/>
                <setHeader headerName="Authorization" id="_setHeader1">
                    <constant>Basic RlVTRVNBUDp0bWwhMTJUTUw</constant>
                </setHeader>
                <to id="_toSAP" uri="mock:SAP"/>
                <!-- <to id="_toSAP" uri="cxf:bean:sapCitiFundPostingEndpoint"/> -->
                <setBody id="_setBody1">
                    <simple>
			&lt;env:Envelope
				xmlns:env="http://www.w3.org/2003/05/soap-envelope"&gt;
				&lt;env:Header/&gt;
				&lt;env:Body&gt;
				&lt;n0:ZFIRFC_BANK_ECOLLECTION_CITIResponse xmlns:n0="urn:sap-com:document:sap:rfc:functions"&gt;
				&lt;E_ACK/&gt;
				&lt;I_ZFI_BANK_ECOLLECTION_CITI&gt;
				&lt;item&gt;
				&lt;HDFC_REF&gt;CSBKR92018010910000329&lt;/HDFC_REF&gt;
				&lt;BANK_ACC&gt;HCVTML11E4150&lt;/BANK_ACC&gt;
				&lt;AMOUNT&gt;100.34&lt;/AMOUNT&gt;
				&lt;DOC_DATE&gt;2018-05-21&lt;/DOC_DATE&gt;
				&lt;DEALER&gt;2105500&lt;/DEALER&gt;
				&lt;BUSTYP&gt;HCVTML&lt;/BUSTYP&gt;
				&lt;STATUS&gt;1&lt;/STATUS&gt;
				&lt;UTR_NO&gt;CSBKR92018010910000329&lt;/UTR_NO&gt;
				&lt;REMARK&gt;0000105500 is not valid&lt;/REMARK&gt;
				&lt;DEALERD&gt;0000105500&lt;/DEALERD&gt;
				&lt;/item&gt;
				&lt;/I_ZFI_BANK_ECOLLECTION_CITI&gt;
				&lt;/n0:ZFIRFC_BANK_ECOLLECTION_CITIResponse&gt;
				&lt;/env:Body&gt;
			&lt;/env:Envelope&gt; 
				</simple>
                </setBody>
                <bean id="_bean3"
                    method="response(*************** Response from SAP ***************)" ref="logger"/>
                <setBody id="_setBody3">
                    <xpath>//n0:ZFIRFC_BANK_ECOLLECTION_CITIResponse/I_ZFI_BANK_ECOLLECTION_CITI</xpath>
                </setBody>
                <log id="_log4" message="Body after xpath :: ${body}"/>
                <to id="_to1" uri="xslt:classpath:CitiResponse.xslt"/>
                <log id="_log5" message="Body : ${body}"/>
                <bean id="_bean4"
                    method="response(*************** Response from SAP sent to CITI BANK ***************)" ref="logger"/>
                <doCatch id="_doCatch1">
                    <exception>java.net.SocketTimeoutException</exception>
                    <setBody id="_setBody4">
                        <simple>{"error":"Exception Occurred while calling SAP"}</simple>
                    </setBody>
                    <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="_setHeader2">
                        <constant>500</constant>
                    </setHeader>
                    <log id="_log2" message="Exception :: ${exception.stacktrace}"/>
                </doCatch>
                <doCatch id="_doCatch2">
                    <exception>java.lang.Exception</exception>
                    <setBody id="_setBody5">
                        <simple>{"error":"Exception Occurred"}</simple>
                    </setBody>
                    <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="_setHeader3">
                        <constant>500</constant>
                    </setHeader>
                    <log id="_log3" message="Exception :: ${exception.stacktrace}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</beans>
